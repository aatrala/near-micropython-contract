#ifndef C_WASM_H_GENERATED_
#define C_WASM_H_GENERATED_
/* Automically generated by wasm2c */
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

#include "wasm-rt.h"

#ifndef WASM_RT_MODULE_PREFIX
#define WASM_RT_MODULE_PREFIX
#endif

#define WASM_RT_PASTE_(x, y) x ## y
#define WASM_RT_PASTE(x, y) WASM_RT_PASTE_(x, y)
#define WASM_RT_ADD_PREFIX(x) WASM_RT_PASTE(WASM_RT_MODULE_PREFIX, x)

/* TODO(binji): only use stdint.h types in header */
typedef uint8_t u8;
typedef int8_t s8;
typedef uint16_t u16;
typedef int16_t s16;
typedef uint32_t u32;
typedef int32_t s32;
typedef uint64_t u64;
typedef int64_t s64;
typedef float f32;
typedef double f64;

extern void WASM_RT_ADD_PREFIX(init)(void);

/* import: 'env' 'panic_utf8' */
extern void (*Z_envZ_panic_utf8Z_vjj)(u64, u64);
/* import: 'env' 'register_len' */
extern u64 (*Z_envZ_register_lenZ_jj)(u64);
/* import: 'env' 'read_register' */
extern void (*Z_envZ_read_registerZ_vjj)(u64, u64);
/* import: 'env' 'write_register' */
extern void (*Z_envZ_write_registerZ_vjjj)(u64, u64, u64);
/* import: 'env' 'current_account_id' */
extern void (*Z_envZ_current_account_idZ_vj)(u64);
/* import: 'env' 'signer_account_id' */
extern void (*Z_envZ_signer_account_idZ_vj)(u64);
/* import: 'env' 'signer_account_pk' */
extern void (*Z_envZ_signer_account_pkZ_vj)(u64);
/* import: 'env' 'predecessor_account_id' */
extern void (*Z_envZ_predecessor_account_idZ_vj)(u64);
/* import: 'env' 'input' */
extern void (*Z_envZ_inputZ_vj)(u64);
/* import: 'env' 'block_index' */
extern u64 (*Z_envZ_block_indexZ_jv)(void);
/* import: 'env' 'block_timestamp' */
extern u64 (*Z_envZ_block_timestampZ_jv)(void);
/* import: 'env' 'epoch_height' */
extern u64 (*Z_envZ_epoch_heightZ_jv)(void);
/* import: 'env' 'storage_usage' */
extern u64 (*Z_envZ_storage_usageZ_jv)(void);
/* import: 'env' 'account_balance' */
extern void (*Z_envZ_account_balanceZ_vj)(u64);
/* import: 'env' 'account_locked_balance' */
extern void (*Z_envZ_account_locked_balanceZ_vj)(u64);
/* import: 'env' 'attached_deposit' */
extern void (*Z_envZ_attached_depositZ_vj)(u64);
/* import: 'env' 'prepaid_gas' */
extern u64 (*Z_envZ_prepaid_gasZ_jv)(void);
/* import: 'env' 'used_gas' */
extern u64 (*Z_envZ_used_gasZ_jv)(void);
/* import: 'env' 'random_seed' */
extern void (*Z_envZ_random_seedZ_vj)(u64);
/* import: 'env' 'sha256' */
extern void (*Z_envZ_sha256Z_vjjj)(u64, u64, u64);
/* import: 'env' 'keccak256' */
extern void (*Z_envZ_keccak256Z_vjjj)(u64, u64, u64);
/* import: 'env' 'keccak512' */
extern void (*Z_envZ_keccak512Z_vjjj)(u64, u64, u64);
/* import: 'env' 'ripemd160' */
extern void (*Z_envZ_ripemd160Z_vjjj)(u64, u64, u64);
/* import: 'env' 'ecrecover' */
extern u64 (*Z_envZ_ecrecoverZ_jjjjjjjj)(u64, u64, u64, u64, u64, u64, u64);
/* import: 'env' 'value_return' */
extern void (*Z_envZ_value_returnZ_vjj)(u64, u64);
/* import: 'env' 'panic' */
extern void (*Z_envZ_panicZ_vv)(void);
/* import: 'env' 'log_utf8' */
extern void (*Z_envZ_log_utf8Z_vjj)(u64, u64);
/* import: 'env' 'log_utf16' */
extern void (*Z_envZ_log_utf16Z_vjj)(u64, u64);
/* import: 'env' 'promise_create' */
extern u64 (*Z_envZ_promise_createZ_jjjjjjjjj)(u64, u64, u64, u64, u64, u64, u64, u64);
/* import: 'env' 'promise_then' */
extern u64 (*Z_envZ_promise_thenZ_jjjjjjjjjj)(u64, u64, u64, u64, u64, u64, u64, u64, u64);
/* import: 'env' 'promise_and' */
extern u64 (*Z_envZ_promise_andZ_jjj)(u64, u64);
/* import: 'env' 'promise_batch_create' */
extern u64 (*Z_envZ_promise_batch_createZ_jjj)(u64, u64);
/* import: 'env' 'promise_batch_then' */
extern u64 (*Z_envZ_promise_batch_thenZ_jjjj)(u64, u64, u64);
/* import: 'env' 'promise_batch_action_create_account' */
extern void (*Z_envZ_promise_batch_action_create_accountZ_vj)(u64);
/* import: 'env' 'promise_batch_action_deploy_contract' */
extern void (*Z_envZ_promise_batch_action_deploy_contractZ_vjjj)(u64, u64, u64);
/* import: 'env' 'promise_batch_action_function_call' */
extern void (*Z_envZ_promise_batch_action_function_callZ_vjjjjjjj)(u64, u64, u64, u64, u64, u64, u64);
/* import: 'env' 'promise_batch_action_transfer' */
extern void (*Z_envZ_promise_batch_action_transferZ_vjj)(u64, u64);
/* import: 'env' 'promise_batch_action_stake' */
extern void (*Z_envZ_promise_batch_action_stakeZ_vjjjj)(u64, u64, u64, u64);
/* import: 'env' 'promise_batch_action_add_key_with_full_access' */
extern void (*Z_envZ_promise_batch_action_add_key_with_full_accessZ_vjjjj)(u64, u64, u64, u64);
/* import: 'env' 'promise_batch_action_add_key_with_function_call' */
extern void (*Z_envZ_promise_batch_action_add_key_with_function_callZ_vjjjjjjjjj)(u64, u64, u64, u64, u64, u64, u64, u64, u64);
/* import: 'env' 'promise_batch_action_delete_key' */
extern void (*Z_envZ_promise_batch_action_delete_keyZ_vjjj)(u64, u64, u64);
/* import: 'env' 'promise_batch_action_delete_account' */
extern void (*Z_envZ_promise_batch_action_delete_accountZ_vjjj)(u64, u64, u64);
/* import: 'env' 'promise_batch_action_function_call_weight' */
extern void (*Z_envZ_promise_batch_action_function_call_weightZ_vjjjjjjjj)(u64, u64, u64, u64, u64, u64, u64, u64);
/* import: 'env' 'promise_results_count' */
extern u64 (*Z_envZ_promise_results_countZ_jv)(void);
/* import: 'env' 'promise_result' */
extern u64 (*Z_envZ_promise_resultZ_jjj)(u64, u64);
/* import: 'env' 'promise_return' */
extern void (*Z_envZ_promise_returnZ_vj)(u64);
/* import: 'env' 'storage_write' */
extern u64 (*Z_envZ_storage_writeZ_jjjjjj)(u64, u64, u64, u64, u64);
/* import: 'env' 'storage_read' */
extern u64 (*Z_envZ_storage_readZ_jjjj)(u64, u64, u64);
/* import: 'env' 'storage_remove' */
extern u64 (*Z_envZ_storage_removeZ_jjjj)(u64, u64, u64);
/* import: 'env' 'storage_has_key' */
extern u64 (*Z_envZ_storage_has_keyZ_jjj)(u64, u64);
/* import: 'env' 'validator_stake' */
extern void (*Z_envZ_validator_stakeZ_vjjj)(u64, u64, u64);
/* import: 'env' 'validator_total_stake' */
extern void (*Z_envZ_validator_total_stakeZ_vj)(u64);

/* export: 'memory' */
extern wasm_rt_memory_t (*WASM_RT_ADD_PREFIX(Z_memory));
/* export: 'add_numbers' */
extern void (*WASM_RT_ADD_PREFIX(Z_add_numbersZ_vv))(void);
/* export: 'say_hello' */
extern void (*WASM_RT_ADD_PREFIX(Z_say_helloZ_vv))(void);
#ifdef __cplusplus
}
#endif

#endif  /* C_WASM_H_GENERATED_ */
